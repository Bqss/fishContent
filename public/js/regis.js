export function HandleRegist() { const a = a => { const b = a.value; return b.match(/[a-zA-Z1-9]{2,}@[a-z]{4,}[.]/g) ? { isValid: !0, message: "" } : { isValid: !1, message: "Format email harus menggunakan @" } }, b = a => { const b = a.value; if (isNaN(+b)) return { isValid: !1, message: "Hanya menerima angka !" }; return b.match(/08/g) ? { isValid: !0, message: "" } : { isValid: !1, message: "Nomor harus diawali dengan 08 !" } }, c = a => { const b = a.value; if (8 > b.length) return { isValid: !1, message: "Password minimal 8 karakter !" }; return b.match(/[A-Z]/g) ? b.match(/[0-9]/g) ? { isValid: !0, message: "" } : { isValid: !1, message: "Password harus mengandung sebuah angka !" } : { isValid: !1, message: "Password harus mengandung 1 huruf kapital !" } }, d = a => { const b = a.value; return isNaN(+b) ? { isValid: !1, message: "hanya menerima angka!" } : { isValid: !0, message: "" } }, f = a => a.value ? { isValid: !0, message: "" } : { isValid: !1, message: a.name + " tidak boleh kosong!" }, g = g => { const e = g.parentElement.querySelector(".validate"); let h; return h = f(g), "tel" === g.type ? h = b(g) : "email" === g.type ? h = a(g) : "password" === g.type ? h = c(g) : "Password" === g.name ? h = c(g) : "Kode pos" === g.name && (h = d(g)), e.innerHTML = h.message, h.isValid ? (e.classList.add("hidden"), g.classList.remove("input--invalid")) : (e.classList.remove("hidden"), g.classList.add("input--invalid")), h.isValid }, h = (a, b) => { const c = a.parentElement.querySelector(".validate"); return a.value === b.value ? (c.classList.add("hidden"), a.classList.remove("input--invalid"), !0) : (c.classList.remove("hidden"), a.classList.add("input--invalid"), !1) }, i = document.querySelector("form"), j = [...i.querySelectorAll("input:not([type=submit])")].filter(a => "password" !== a.type && "Detail" != a.name), k = document.querySelectorAll("input[type=password]"), l = document.querySelectorAll("select"); j.forEach(a => { a.addEventListener("input", ({ target: a }) => { g(a) }) }), l.forEach(a => { a.addEventListener("change", ({ target: a }) => { g(a) }) }), k.forEach((a, b) => { const c = a.nextElementSibling; a.addEventListener("input", () => { 0 === b ? g(a) : h(k[1], k[0]) }), c.addEventListener("click", b => { b.preventDefault(), c.classList.toggle("expanded"), a.type = c.classList.contains("expanded") ? "text" : "password" }) }) }